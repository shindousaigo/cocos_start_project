{"version":3,"sources":["Star.ts"],"names":[],"mappings":";;;;;AAEA,oBAAoB;AACpB,2EAA2E;AAC3E,gHAAgH;AAChH,mBAAmB;AACnB,qFAAqF;AACrF,0HAA0H;AAC1H,8BAA8B;AAC9B,qFAAqF;AACrF,0HAA0H;AAEpH,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEAgCC;QA5BG,AACA,SADS;QACT,gBAAU,GAAW,CAAC,CAAC;QACvB,UAAI,GAAS,IAAI,CAAC;;IA0BtB,CAAC;IAxBG,iCAAkB,GAAlB;QACI,sBAAsB;QACtB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACjD,iBAAiB;QACjB,IAAI,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,uBAAQ,GAAR;QACI,kCAAkC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACzB,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,qBAAM,GAAN,UAAO,EAAE;QACL,uBAAuB;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9C,SAAS;YACT,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;IACL,CAAC;IAzBD;QAFC,QAAQ;QACT,SAAS;4CACc;IAJN,IAAI;QADxB,OAAO;OACa,IAAI,CA+BxB;IAAD,WAAC;CA/BD,AA+BC,CA/BiC,EAAE,CAAC,SAAS,GA+B7C;kBA/BoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["import Game from \"./Game\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/typescript/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Star extends cc.Component {\r\n\r\n    @property\r\n    // 星星拾取距离\r\n    pickRadius: number = 0;\r\n    game: Game = null;\r\n\r\n    getMonsterDistance(): number {\r\n        // 根据 monster 节点位置判断距离\r\n        var monsterPos = this.game.monster.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position, monsterPos);\r\n        return dist;\r\n    }\r\n\r\n    onPicked() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    }\r\n\r\n    update(dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getMonsterDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}